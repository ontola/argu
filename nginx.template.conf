# {your_local_ip}
# 10.0.1.x
# 192.168.1.x

worker_processes        2;

events {
    worker_connections  1024;
    multi_accept        on;
    use                 epoll;
}

http {
    log_format debuglog         '[$time_iso8601] $remote_addr - $server_name     => $upstream_addr:    '
                                '"$request" $status $body_bytes_sent '
                                '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$request_body" "$http_Authorization" cookie: "$http_Cookie" x-argu-back: "$http_X_Argu_Back" uri: "$uri" backend: "$backend"';
    log_format upstreamlog      '[$time_iso8601] $remote_addr - $server_name     => $upstream_addr:    $request [tUps: $upstream_response_time tReq: $request_time]';

    client_body_buffer_size     128K;
    client_header_buffer_size   2k;
    client_max_body_size        8m;
    large_client_header_buffers 2 2k;

    gzip                        on;
    gzip_comp_level             2;
    gzip_proxied                any;
    gzip_types                  text/plain text/css text/javascript application/json application/vnd.api+json application/x-javascript text/xml application/xml;

    proxy_buffering             off;
    proxy_buffer_size           128k;
    proxy_buffers               4 256k;
    proxy_busy_buffers_size     256k;
    proxy_temp_file_write_size  256k;

    tcp_nodelay                 on;
    tcp_nopush                  on;

    upstream frontend {
        server {frontend_host};
    }

    upstream argu {
        server {argu_host};
    }

    upstream cache {
        server {cache_host};
    }

    upstream email {
        server {email_host};
    }

    upstream token {
        server {token_host};
    }

    map $uri $backend {
        ~^(/\w+)?/tokens        token;
        ~^(/\w+)?/email/        email;
        ~^/link-lib/bulk        cache;
        ~^/link-lib/cache       cache;
        default                 argu;
    }

    server {
        listen              443 ssl http2;
        server_name         argu.localdev;
        server_name         argu.localtest;
        server_name         app.argu.localdev;
        server_name         app.argu.localtest;
        server_name         glapp.localdev;
        server_name         team.glapp.localdev;
        server_name         demogemeente.localdev;
        server_name         denkmee.drechtstedenenergie.localdev;
        server_name         veiligheidsinterventies.localdev;
        server_name         maatregelenwiki.localdev;
        server_name         dexpods.localdev;
        server_name         *.dexpods.localdev;
        server_name         dextransfer.localdev;

        root                /etc/nginx/www;
        access_log          /dev/fd/1 upstreamlog;
        error_log           /dev/fd/1;
        sendfile            on;

        ssl_certificate     /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        proxy_set_header    Host                $host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   https;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          "Upgrade";

        proxy_pass_request_headers              on;

        merge_slashes                           off;

        location /link-lib/bulk {
            proxy_pass http://cache;
        }

        location /link-lib/cache {
            proxy_pass http://cache;
        }

        location / {
            proxy_pass http://frontend;
        }
    }

    server {
        listen              2999;
        listen              3030;
        access_log          /dev/fd/1 upstreamlog;
        error_log           /dev/fd/1;

        proxy_set_header    Host                $host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          "Upgrade";

        proxy_pass_request_headers              on;

        location / {
            proxy_pass http://$backend;
        }
    }
}
